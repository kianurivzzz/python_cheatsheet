'''
-----------------------------------------------RU----------------------------------------------------------------
Оператор                                        Описание
lambda                                          лямбда-выражение
or                                              Логическое «ИЛИ»
and                                             Логическое «И»
not x                                           Логическое «НЕ»
in, not in                                      Проверка принадлежности
is, is not                                      Проверка тождественности
<, <=, >, >=, !=, ==                            Сравнения
|                                               Побитовое «ИЛИ»
^                                               Побитовое «ИСКЛЮЧИТЕЛЬНО ИЛИ»
&                                               Побитовое «И»
<<, >>                                          Сдвиги
+, -                                            Сложение и вычитание
*, /, //, %                                     Умножение, деление, целочисленное деление и остаток от деления
+x, -x                                          Положительное, отрицательное
~x                                              Побитовое НЕ
**                                              Возведение в степень
x.attribute                                     Ссылка на атрибут
x[индекс]                                       Обращение по индексу
x[индекс1:индекс2]                              Срезы
f(аргументы ...)                                Вызов функции
(данные, ...)                                   Связка или кортеж
[данные, ...]                                   Список
{ключ:значение,                                 Словарь
...}

Здесь операторы с равным приоритетом расположены в одной строке.
Например, + и - имеют равный приоритет.

Для облегчения чтения выражений можно использовать скобки. Например, 2 + (3 * 4)
определённо легче понять, чем 2 + 3 * 4, которое требует знания приоритета операторов.
Как и всё остальное, скобки нужно использовать разумно (не перестарайтесь) и
избегать излишних, как в (2 + (3 * 4)). Есть ещё одно преимущество в использовании скобок –
они дают возможность изменить порядок вычисления выражений.
Например, если сложение необходимо произвести до умножения, можно записать (2 + 3) * 4.

------------------------------------------------EN---------------------------------------------------------------
Here, operators with equal priority are on the same line.
For example, + and - have equal priority.

You can use parentheses to make expressions easier to read. For example, 2 + (3 * 4)
is definitely easier to understand than 2 + 3 * 4, which requires knowing the priority of operators.
Like everything else, brackets should be used judiciously (don't overdo it) and
avoid unnecessary ones, as in (2 + (3 * 4)). There's another advantage to using parentheses.
they allow you to change the order in which expressions are calculated.
For example, if addition is to be done before multiplication, you can write (2 + 3) * 4.

'''
